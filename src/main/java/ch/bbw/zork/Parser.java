package ch.bbw.zork;/* * author:  Michael Kolling, Version: 1.0, Date: July 1999 * refactoring: Rinaldo Lanza, September 2020 */import java.io.BufferedReader;import java.io.InputStream;import java.io.InputStreamReader;import java.util.StringTokenizer;public class Parser {	private CommandWords validCommandWords;	private InputStream inputStream;	public Parser(InputStream inputStream) {		this.inputStream = inputStream;		this.validCommandWords = new CommandWords();	}	public Command getCommand() {		String inputLine;		System.out.print("> ");		BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(this.inputStream));		try {			inputLine = bufferedReader.readLine();			String[] tokens = inputLine.split(" ");			if(validCommandWords.isCommand(tokens[0])){				switch(tokens.length) {					case 2:						return new Command(tokens[0], tokens[1]);					case 1:						return new Command(tokens[0]);					default:						System.out.println("An Error occurred while Parsing");						break;				}			}else{				return new Command(null);			}		} catch (java.io.IOException exc) {			System.out.println("There was an error during reading: " + exc.getMessage());		}		return new Command(null);	}	public String showCommands() {		return validCommandWords.showAll();	}}